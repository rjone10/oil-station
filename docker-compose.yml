version: '3.5'

x-constants:
  kafka: &kafka
    ALLOW_PLAINTEXT_LISTENER: "yes"
    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092, PLAINTEXT_HOST://localhost:29092
    KAFKA_LISTENERS: PLAINTEXT://:9092, PLAINTEXT_HOST://:29092
    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  zookeeper: &zookeeper
    ALLOW_ANONYMOUS_LOGIN: "yes"
  oil-station: &oil-station
    KAFKA_BROKER_LIST: kafka:9092

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3
    ports:
      - "2181:2181"
    environment:
      <<: *zookeeper
    volumes:
      - zookeeper_vol:/bitnami/zookeeper
    networks:
      - spring-cloud-network
    logging:
      options:
        max-size: 50m

  kafka:
    image: docker.io/bitnami/kafka:2
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      <<: *kafka
    volumes:
      - kafka_vol:/bitnami/kafka
    networks:
      - spring-cloud-network
    depends_on:
      - zookeeper
    logging:
      options:
        max-size: 50m
  #    bootstrapServers: ${spring.embedded.kafka.brokers}

  oil-station:
    container_name: oil-station
    build:
      context: .
      dockerfile: Dockerfile
    image: oil-station:latest
    ports:
      - 8080:8080
    networks:
      - spring-cloud-network
    depends_on:
      - kafka
    environment:
      <<: *oil-station

networks:
  spring-cloud-network:
    driver: bridge

volumes:
  zookeeper_vol:
  kafka_vol:

